# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                                   controllers.Application.index

# PlayerController
GET     /api/player/all                     controllers.PlayerController.getAllPlayer
GET     /api/player/:id                     controllers.PlayerController.getPlayer(id: Long)

# MatchController:
GET     /api/match/all                      controllers.MatchController.getAllMatches
GET     /api/match/typeid/:typeid           controllers.MatchController.getMatchesByType(typeid: Long)
# GET     /api/match/filter                   controllers.MatchController.getFilteredMatchList()
POST    /api/match/matchtotable/:tableName     controllers.MatchController.setMatchToTable(tableName: Int, checkPlayable: Boolean = true, print: Boolean = true, secondTable: Boolean = false)
POST    /api/match/matchtosecondtable/:tableName     controllers.MatchController.setMatchToTable(tableName: Int, checkPlayable: Boolean = false, print: Boolean = false, secondTable: Boolean = true)
GET     /api/match/open/all                 controllers.MatchController.getOpenMatches
GET     /api/match/open/typeid/:typeid      controllers.MatchController.getOpenMatchesByTypeId(typeid: Long)
GET     /api/match/played/all               controllers.MatchController.getPlayedMatches
GET     /api/match/played/typeid/:typeid    controllers.MatchController.getPlayedMatchesByTypeId(typeid: Long)
GET     /api/match/loadnew                  controllers.MatchController.loadNewMatches
GET     /api/match/:id                      controllers.MatchController.getMatch(id: Long)
GET     /api/matchaggregate/caller          controllers.MatchController.getMatchAggregateForCaller
# Result format: [[5,11],[13,11],[11,0],[11,4]]
POST    /api/match/:id/result               controllers.MatchController.setResult(id: Long)

GET     /api/types/all                      controllers.MatchController.getTypes
GET     /api/types/open/all                 controllers.MatchController.getActiveTypes

# TableController:
GET     /api/table/all                      controllers.TableController.getAllTables
GET     /api/table/free                     controllers.TableController.getFreeTables
GET     /api/table/:id                      controllers.TableController.getTable(id: Long)
GET     /api/table/:nr/lock                 controllers.TableController.lockTable(nr: Long)
GET     /api/table/:nr/unlock               controllers.TableController.unlockTable(nr: Long)

# MatchListController:
GET     /api/matchlist/all                  controllers.MatchListController.getAllMatchList
GET     /api/matchlist/next                 controllers.MatchListController.getNext
POST    /api/matchlist/addMatch             controllers.MatchListController.addMatch
DELETE  /api/matchlist/deleteMatch/:uuid    controllers.MatchListController.deleteMatch(uuid: String)
GET     /api/matchlist/active/:isActive     controllers.MatchListController.setActive(isActive: Boolean)
GET     /api/matchlist/move/:uuid/:position controllers.MatchListController.move(uuid: String, position: Int)
GET     /api/matchlist/autostart            controllers.MatchListController.autoStart
POST    /api/match/free                     controllers.MatchController.freeMatches
POST    /api/match/takeBack                 controllers.MatchController.takeBackMatches
GET     /api/match/delete/:id               controllers.MatchController.deleteMatch(id: Long)
GET     /api/match/deleteType/:id           controllers.MatchController.deleteType(id: Long)
POST    /api/match/call                     controllers.MatchController.callMatches

# WebSocket for push messages
GET     /api/ws/tables                      controllers.WebSocketController.tablesSocket
GET     /api/ws/matches                     controllers.WebSocketController.matchesSocket
GET     /api/ws/matches                     controllers.WebSocketController.matchListSocket

# PrinterController:
GET     /api/printer/all                    controllers.PrinterController.allPrinter
GET     /api/printer/printpdf/:id           controllers.PrinterController.printPDF(id: Long)
GET     /api/printer/print/:id              controllers.PrinterController.print(id: Long)
POST    /api/printer/printAll               controllers.PrinterController.printAll
GET     /api/printer/set/:name              controllers.PrinterController.setPrinter(name: String)
GET     /api/printer/setprintonstart/:printOnStart        controllers.PrinterController.setPrintOnStart(printOnStart: Boolean)
GET     /api/printer/getQrCode/:content     controllers.PrinterController.getQrCode(content: String)

GET     /api/settings/all                   controllers.SettingsController.allSettings
# POST    /settings                       controllers.SettingsController.setSettings

